/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsString, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { EnumCourseLanguage } from "./EnumCourseLanguage";
import { EnumCourseLessons } from "./EnumCourseLessons";
import { EnumCourseLevel } from "./EnumCourseLevel";

@ObjectType()
class Course {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    enum: EnumCourseLanguage,
  })
  @IsEnum(EnumCourseLanguage)
  @IsOptional()
  @Field(() => EnumCourseLanguage, {
    nullable: true,
  })
  language?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumCourseLessons,
    isArray: true,
  })
  @IsEnum(EnumCourseLessons, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumCourseLessons], {
    nullable: true,
  })
  lessons?: Array<"Option1">;

  @ApiProperty({
    required: false,
    enum: EnumCourseLevel,
  })
  @IsEnum(EnumCourseLevel)
  @IsOptional()
  @Field(() => EnumCourseLevel, {
    nullable: true,
  })
  level?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Course as Course };
