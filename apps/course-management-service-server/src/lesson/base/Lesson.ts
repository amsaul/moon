/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, IsDate, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { EnumLessonExercises } from "./EnumLessonExercises";
import { EnumLessonLinkedExercises } from "./EnumLessonLinkedExercises";

@ObjectType()
class Lesson {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  content!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumLessonExercises,
    isArray: true,
  })
  @IsEnum(EnumLessonExercises, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumLessonExercises], {
    nullable: true,
  })
  exercises?: Array<"Option1">;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lessonVideoUrl!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumLessonLinkedExercises,
    isArray: true,
  })
  @IsEnum(EnumLessonLinkedExercises, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumLessonLinkedExercises], {
    nullable: true,
  })
  linkedExercises?: Array<"Option1">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  relatedCourse!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  videoUrl!: string | null;
}

export { Lesson as Lesson };
